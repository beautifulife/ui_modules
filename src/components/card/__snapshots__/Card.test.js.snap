// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card about render compare with snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    cardAuthor=""
    cardCrossOut=""
    cardHilight=""
    cardImgSrc=""
    cardLabel=""
    cardRating={-1}
    cardRatingDesc=""
    cardTitle=""
    cardType="vertical"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="Card vertical"
        >
          <Cover
            imgSrc=""
            label=""
            type="vertical"
          />
          <Information
            crossOut=""
            hilight=""
            label=""
            title=""
          />
          <Rating
            author=""
            rating={-1}
            ratingDesc=""
            type="vertical"
          />
        </div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Cover
              imgSrc=""
              label=""
              type="vertical"
            />,
            <Information
              crossOut=""
              hilight=""
              label=""
              title=""
            />,
            <Rating
              author=""
              rating={-1}
              ratingDesc=""
              type="vertical"
            />,
          ],
          "className": "Card vertical",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "imgSrc": "",
              "label": "",
              "type": "vertical",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "crossOut": "",
              "hilight": "",
              "label": "",
              "title": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "author": "",
              "rating": -1,
              "ratingDesc": "",
              "type": "vertical",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="Card vertical"
          >
            <Cover
              imgSrc=""
              label=""
              type="vertical"
            />
            <Information
              crossOut=""
              hilight=""
              label=""
              title=""
            />
            <Rating
              author=""
              rating={-1}
              ratingDesc=""
              type="vertical"
            />
          </div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Cover
                imgSrc=""
                label=""
                type="vertical"
              />,
              <Information
                crossOut=""
                hilight=""
                label=""
                title=""
              />,
              <Rating
                author=""
                rating={-1}
                ratingDesc=""
                type="vertical"
              />,
            ],
            "className": "Card vertical",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "imgSrc": "",
                "label": "",
                "type": "vertical",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "crossOut": "",
                "hilight": "",
                "label": "",
                "title": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "author": "",
                "rating": -1,
                "ratingDesc": "",
                "type": "vertical",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
